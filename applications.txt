A short overview of the newly implemented standalone applications.
And their corresponding servers.

#Pair 1

*Client->GM Application:

Name: DtlspClientGroupOSCORE
Security protocol: DTLS
Security type: PSK
CWT protection: PSK(?)
Run with: TestDtlspRSGroupOSCORE

*GM Application:

Name: TestDtlspRSGroupOSCORE
Security protocol: DTLS
Security type: PSK / RPK(?)
CWT protection: PSK / RPK(?)


#Pair 2

*Client->AS Application:

Name: CoAPClientGroupOSCORE
Security protocol: DTLS
Security type: PSK & RPK
CWT protection: PSK(?)
Run with: CoapASTestServerGroupOSCORE

*AS Application:

Name: CoapASTestServerGroupOSCORE
Security protocol: DTLS
Security type: PSK / RPK
CWT protection: PSK / RPK (supports both depending on config)


#Pair 3

*Client->AS & Client->GM Application:

Seems to work now after some modifications
regarding Token encryption/signing, setting
the audience and configuring the GM.

Name: DtlsAsRsClientGroupOSCORE
Security protocol: DTLS
Security type: PSK & (RKP for Client->AS)
CWT protection: PSK
Run with: CoapASTestServerGroupOSCORE & TestDtlspRSGroupOSCORE
(Be careful to set the AS & RS ports so they do not overlap)


#Pair 4

*Client->GM Application (OSCORE):

Code used for testing with Peter van der Stok during the Hackathon.
OSCORE Client->GM and GM applications. The client generates its own Token followed
by posting it and performing the Join process.

TODO: Add note about changes from Hackathon
TODO: Make a copy of this as a JUnit.

Name: TestOSCoreRSGroupOSCORE
Security protocol: OSCORE
CWT protection: PSK(?)
Run with: OSCoreClientGroupOSCORE

*GM Application (OSCORE):

Name: OSCoreClientGroupOSCORE
Security protocol: OSCORE
CWT protection: RPK


#Pair 5

Standalone client and GM for joining with the OSCORE ACE profile joining.
Includes the new parameters and pop signature.

*Client->GM Application (OSCORE)

Name: OscorepClient2RSGroupOSCORE
Security Protocol: OSCORE
CWT protection: PSK
Run with: TestOscorepRSGroupOSCORE

*GM Application (OSCORE)

Name: TestOscorepRSGroupOSCORE
Security protocol: OSCORE
CWT protection: PSK



TODO:
Update this file after all the recent changes

Add parameters to Token post & response X
 Depending on if scope is a byte string or not X

Change values & labels in Join response to use integers instead of strings (like "HKDF_HMAC_SHA_256" & "AES_CCM_16_64_128" etc.) X
 Done X

Update GM code to support messages from Peter's client
  Create the group he is trying to join ("GRP") X

Check usage of csKeyEnc parameter in Junit tests
 For the clients
 Check the incoming csKeyEnc in the client code

Make pub_keys label into integer instead of string X

Lower priority:
Full procedure using OSCORE profile (OSCORE from Client AS and Client RS)
Create some JUnit tests based on the OSCORE profile examples X
Check if "type" parameter is implemented in join request
RPK handshake for DTLS full procedure

