A short overview of the newly implemented standalone applications.
And their corresponding servers.


*Client->GM Application:

Name: DtlspClientGroupOSCORE
Security protocol: DTLS
Security type: PSK
CWT protection: PSK
Run with: TestDtlspRSGroupOSCORE


*GM Application:

Name: TestDtlspRSGroupOSCORE
Security protocol: DTLS
Security type: PSK / RPK(?)
CWT protection: PSK / RPK(?)


*Client->AS Application:

Name: CoAPClientGroupOSCORE
Security protocol: DTLS
Security type: PSK & RPK
CWT protection: PSK
Run with: CoapASTestServerGroupOSCORE


*AS Application:

Name: CoapASTestServerGroupOSCORE
Security protocol: DTLS
Security type: PSK / RPK
CWT protection: PSK / RPK(?)


*Client->AS & Client->GM Application:

Work in progress. Currently DTLS handshake from Client to GM fails.
Perhaps due to bad data in Token or bad PSK Identity used by the Client.

Name: DtlsAsRsClientGroupOSCORE
Security protocol: DTLS
Security type: PSK & (RKP for Client->AS)
CWT protection: PSK
Run with: CoapASTestServerGroupOSCORE & TestDtlspRSGroupOSCORE
(Be careful to set the AS & RS ports so they do not overlap)


*Client->GM Application (OSCORE):

Code for testing with Peter van der Stok during Hackathon.
OSCORE Client->GM and GM applications. The client generates its own Token followed
by posting it and performing the Join process.

Name: TestOSCoreRSGroupOSCORE
Security protocol: OSCORE
CWT protection: PSK
Run with: OSCoreClientGroupOSCORE

*GM Application (OSCORE):

Name: OSCoreClientGroupOSCORE
Security protocol: OSCORE
CWT protection: PSK


*Client->GM Application (OSCORE) (old):

Older code starting from DTLS-base. Works but only when using bypass method.

Name: AltTestOSCoreRSGroupOSCORE
Security protocol: OSCORE
CWT protection: PSK
Run with: OSCoreClientGroupOSCORE

*GM Application (OSCORE) (old):

Older code starting from DTLS-base. Works but only when using bypass method.

Name: AltOSCoreClientGroupOSCORE
Security protocol: OSCORE
CWT protection: PSK

